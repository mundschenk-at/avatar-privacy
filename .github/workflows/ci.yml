name: CI

on: [push]

jobs:
  unit-tests:
    name: Unit tests (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    env:
      COVERAGE_PHP: '7.4'
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup PHP, with Composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Remove unused Composer dependencies
        run: composer remove humbug/php-scoper sirbrillig/phpcs-import-detection --dev --no-interaction --no-update
      - name: Set proper PHP version requirements for running tests
        if: ${{ matrix.php-versions == '5.6' }}
        run: composer require "php:>=5.6" --no-interaction --no-update
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader
      - name: Run PHPUnit tests
        if: ${{ matrix.php-versions != env.COVERAGE_PHP }}
        run: composer test
      - name: Run PHPUnit tests with coverage generation
        if: ${{ matrix.php-versions == env.COVERAGE_PHP }}
        run: |
          mkdir -p build/logs
          composer test -- --coverage-clover build/logs/clover.xml

      # For code coverage report we are uploading our code coverage report to scrutinizer
      - name: Downloading scrutinizer ocular.phar
        if: ${{ matrix.php-versions == env.COVERAGE_PHP }}
        run: wget https://scrutinizer-ci.com/ocular.phar
      - name: Upload coverage data to Scrutinizer-CI
        if: ${{ matrix.php-versions == env.COVERAGE_PHP }}
        run: |
          php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml


  phpcs:
    name: PHPCS (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup PHP, with Composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd
          tools: cs2pr
      - name: Remove unused Composer dependencies
        run: composer remove humbug/php-scoper --dev --no-interaction --no-update
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader
      - name: Run PHPCS checks
        run: vendor/bin/phpcs -q *.php includes/ admin/ public/ --extensions=php --report=checkstyle | cs2pr
      - name: Run PHPCS checks on bootstrapping files
        run: vendor/bin/phpcs -q avatar-privacy.php uninstall.php includes/class-avatar-privacy-*requirements.php --runtime-set testVersion 5.2- --report=checkstyle | cs2pr
